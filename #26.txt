You are organizing an olympiad and would like to create an algorithm to determine the podium. Simple, isn't it!?
An olympiad is a tournament with few rounds. Each round brings more or less points to the players. Good luck!

Input
A score object, containing the scores of all players for each round. For exemple:

{
  'Emy': [8, 12, 1],    // Emy scored 8 points in the first round, 12 points in the second and 1 point in the third.
  'Paul': [2, 6, -9],   // Paul scored 2 points in the first round, 6 points in the second and -9 points in the third.
  'Sandra': [3, 9, 7],  // Sandra scored 3 points in the first round, 9 points in the second and 7 points in the third.
  'Sue': [10, 2, 0],    // ...
  'Yseult': [8, 9, 3]
}
Your task
Return the podium in this form:

{
  'gold': {
    'score': 21,
    'players': ['Emy']
  },
  'silver': {
    'score': 20,
    'players': ['Yseult']
  },
  'bronze': {
    'score': 19,
    'players': ['Sandra']
  }
}
Rules
The best players are those with the most points accumulated.
In each round, players can score positive or negative points (between -100 and 100).
There may be a tie (Example 2).
Tied players share their medal (Example 2).
Names of tied players must be sorted in alphabetical order (Example 2).
When there is a tie, the following medal(s) are not awarded, like at the Olympic Games (Example 3).
Players are not required to participate in all rounds (Example 4).
If a player does not participate in any round, his scores is an empty array []. He is declared forfeit and cannot be on the podium (Example 4).
If by misfortune, there is no one on the podium. The olympiad is cancelled. Return {}.
Examples
Example 1
Input

{
  'Emy': [8, 12, 1],    // Emy scored a total of 21 points
  'Paul': [2, 6, -9],   // Paul scored a total of -1 point
  'Sandra': [3, 9, 7],  // Sandra scored a total of 19 points
  'Sue': [10, 2, 0],    // Sue scored a total of 12 points
  'Yseult': [8, 9, 3]   // Yseult scored a total of 20 points
}
Output

{
  'gold': {
    'score': 21,
    'players': ['Emy']
  },
  'silver': {
    'score': 20,
    'players': ['Yseult']
  },
  'bronze': {
    'score': 19,
    'players': ['Sandra']
  }
}
Example 2
Input

{
  'Emy': [8, 12, 1],    // Emy scored a total of 21 points
  'Sandra': [4, 6, 9],  // Sandra scored a total of 19 points
  'Paul': [3, 9, 7],    // Paul scored a total of 19 points
  'Sue': [10, 2, 0],    // Sue scored a total of 12 points
  'Yseult': [8, 9, 3]   // Yseult scored a total of 20 points
}
Output

{
  'gold': {
    'score': 21,
    'players': ['Emy']
  },
  'silver': {
    'score': 20,
    'players': ['Yseult']
  },
  'bronze': {
    'score': 19,
    'players': ['Paul', 'Sandra']
  }
}
Example 3
Input

{
  'Emy': [8, 12, 1],    // Emy scored a total of 21 points
  'Paul': [2, 6, 7],    // Paul scored a total of 15 points
  'Sandra': [3, 9, 7],  // Sandra scored a total of 19 points
  'Sue': [10, 11, 0],   // Sue scored a total of 21 points
  'Yseult': [8, 9, 3]   // Yseult scored a total of 20 points
}
Output

{                   // No silver medal!
  'gold': {
    'score': 21,
    'players': ['Emy', 'Sue']
  },
  'bronze': {
    'score': 20,
    'players': ['Yseult']
  }
}         
Example 4
Input

{
  'Emy': [12],      // Emy scored a total of 12 points
  'Sandra': [],     // shall be declared forfeited
  'Sue': [0, 0]     // Sue scored a total of 0 point
}
Output

{
  'gold': {
    'score': 12,
    'players': ['Emy']
  },
  'silver': {
    'score': 0,
    'players': ['Sue']
  }
}
==============================

Эту задачу я решить не смогла
Вот мой ужасный код. 


function podium(scores){
  let sortScores = []
if (Object.keys(scores).length < 4) {
  scores.name = [-2000]
}
 for (let key in scores) {
  if (scores[key].length === 0) {
    scores[key] = [-1000, -1000]
  } 
}
  for (let key in scores) {
    let result = scores[key].reduce(function(sum,elem) {
      return sum + elem
    }, 0)
    // sortPoints.push(result)
    scores[key] = result
  }




  
  for (let score in scores) {
    sortScores.push([score,scores[score]])
  }
  sortScores.sort()
  sortScores.sort(function(a,b) {
    return b[1] - a[1]
  })
  console.log(scores)
  console.log(sortScores)
  

  let gold = {}
  let silver = {}
  let bronze = {}
  let medals = {}
  if (sortScores[0][1] === sortScores[1][1]){
    gold.score = sortScores[0][1]
    gold.players = [sortScores[0][0],sortScores[1][0]]
    bronze.score = sortScores[2][1]
    bronze.players = [sortScores[2][0]]
    medals.gold = gold
    medals.bronze = bronze
  } else if (sortScores[1][1] === sortScores[2][1]){
    gold.score = sortScores[0][1]
    gold.players = [sortScores[0][0]]
    silver.score = sortScores[1][1]
    silver.players = [sortScores[1][0],sortScores[2][0]]
    medals.gold = gold
    medals.silver = silver
  } else if (sortScores[2][1] === sortScores[3][1]){
    gold.score = sortScores[0][1]
    gold.players = [sortScores[0][0]]
    silver.score = sortScores[1][1]
    silver.players = [sortScores[1][0]]
    bronze.score = sortScores[2][1]
    bronze.players = [sortScores[2][0],sortScores[3][0]]
    medals.gold = gold
    medals.silver = silver
    medals.bronze = bronze
  } else {
    gold.score = sortScores[0][1]
    gold.players = [sortScores[0][0]]
    silver.score = sortScores[1][1]
    silver.players = [sortScores[1][0]]
    bronze.score = sortScores[2][1]
    bronze.players = [sortScores[2][0]]
    medals.gold = gold
    medals.silver = silver
    medals.bronze = bronze
  }
  for (let key in medals) {
    if (medals[key].score < 0) {
      delete medals[key]
    }
  }

  // for (let key in medals.silver) {
  //   console.log(medals.silver.score)
  // }

  console.log(medals)

}



=========SUPER===============

Я пока даже понять не могу

function podium(scores){
  scores = Object.entries(scores).filter(kv=>kv[1].length);
  scores.forEach(kv=>kv[1]=kv[1].reduce((a,b)=>a+b,0));
  scores.sort((a,b)=>b[1]-a[1]||a[0].localeCompare(b[0]));
  
  let out={}, place=-1, score=Infinity, lst=[null];
  let medals='gold silver bronze'.split(' ');
  for(let [name,s] of scores){
    if(score!=s){
      score=s; place+=lst.length; lst=[];
      if(place>=3) break;
      out[medals[place]] = {score:s, players:lst}
    }
    lst.push(name);
  }
  return out;
}


Другое решение: 
Вообще не понимаю, что тут происходит

function sortObject(obj) {
  let resultArray = [];
  for (let i in obj) resultArray.push([i, obj[i]]);
  return resultArray
    .sort((a, b) => +b[0] - +a[0])
    .map((val) => [+val[0], val[1]]);
}
function podium(members) {
  let scores = Object.create(members);
  const res = {};
  const medals = ["gold", "silver", "bronze"];
  const preResult = {};
  let winners = 0;
  for (let i in scores) {
    if (scores[i].length === 0) {
      delete scores[i];
      continue;
    }
    scores[i] = scores[i].reduce((acc, val) => acc + val);
  }
  for (let [key, value] of Object.entries(scores)) {
    if (preResult[value]) {
      preResult[value].push(key);
    } else preResult[value] = [key];
  }

  const result = sortObject(preResult);
  for (let i of result) {
    if (winners > medals.length - 1) break;
    res[medals[winners]] = {
      score: i[0],
      players: i[1].sort(),
    };
    winners += i[1].length;
  }
  return res;
}

